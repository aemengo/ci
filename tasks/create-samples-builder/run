#!/usr/bin/env bash

source /opt/resource/common.sh
start_docker 3 3

set -o errexit
set -o nounset
set -o pipefail


function waitForContainer() {
    for i in $(seq 1 10); do
      echo "curling localhost:8080"
      if curl -o /dev/null --fail localhost:8080; then
        echo "app is healthy"
        return
      fi
    sleep 3
    done
    fail "container never became healthy"
}

chmod +x ./pack-linux-binary/pack-*-linux

echo "pack create-builder "cnbs/samples:dev" -b ./samples-repo/builder.toml"
./pack-linux-binary/pack-*-linux create-builder "cnbs/samples:dev" -b ./samples-repo/builder.toml

echo "saving "cnbs/samples:dev" to samples-tar"
docker save cnbs/samples:dev -o ./samples-tar/samples.tar

echo "pack build --builder "cnbs/samples:dev" -p ./sample-java-app cnbs/sample-java-app"
./pack-linux-binary/pack-*-linux build --builder "cnbs/samples:dev" -p ./sample-java-app cnbs/sample-java-app

echo "docker run -d --rm -p 8080:8080 cnbs/sample-java-app"
container_id=$(docker run -d --rm -p 8080:8080 cnbs/sample-java-app)
trap "docker kill $container_id" EXIT

apk update
apk add curl

waitForContainer "$container_id"