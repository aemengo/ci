#!/usr/bin/env bash

source ci/scripts/common.sh

set -o errexit
set -o nounset
set -o pipefail

set -x

docker load -i golang-image/image
docker tag "$(cat golang-image/image-id)" "golang"

mv pack-linux-binary/pack-*-linux pack-linux-binary/pack
pack_path=$PWD/pack-linux-binary/pack
chmod +x ${pack_path}

if [ "$SELECT_LIFECYCLE" == "default" ]; then
    cd pack-repo
    docker_run \
        -e "PACK_PATH=/tmp/pack" \
        -v "$pack_path":/tmp/pack \
        -e "PACK_CI=true" \
        golang make acceptance
elif [ "$SELECT_LIFECYCLE" == "previous" ]; then
    apk add git

    pushd lifecycle-repo
        lifecycle_version="$(git tag --sort=-creatordate | sed -n 2p | cut -c2-)"
    popd

    cd pack-repo
    docker_run \
        -e "PACK_PATH=/tmp/pack" \
        -v "$pack_path":/tmp/pack \
        -e "LIFECYCLE_VERSION=$lifecycle_version" \
        -e "PACK_CI=true" \
        golang make acceptance
else
    mv lifecycle/lifecycle-*.tgz lifecycle/lifecycle.tgz
    lifecycle_path=$PWD/lifecycle/lifecycle.tgz

    lifecycle_version="$(cat lifecycle-version/version | cut -f1 -d"-")"

    cd pack-repo
    docker_run \
        -e "PACK_PATH=/tmp/pack" \
        -v "$pack_path":/tmp/pack \
        -e "LIFECYCLE_PATH=/tmp/lifecycle.tgz" \
        -v "$lifecycle_path":/tmp/lifecycle.tgz \
        -e "LIFECYCLE_VERSION=$lifecycle_version" \
        -e "PACK_CI=true" \
        golang make acceptance
fi
