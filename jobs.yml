jobs:
  - name: build-lifecycle-binaries
    plan:
      - get: lifecycle-repo
        trigger: true
        version: every
      - get: ci
      - get: lifecycle-image-version
        params:
          pre: alpha
      - get: lifecycle-build-version
        params:
          pre: build
      - aggregate:
        - task: format-lifecycle
          file: ci/tasks/format-lifecycle/task.yml
        - task: run-unit-tests
          privileged: true
          file: ci/tasks/run-lifecycle-unit/task.yml
        - task: build-binaries
          privileged: true
          file: ci/tasks/build-lifecycle-binaries/task.yml
      - aggregate:
        - put: detector-gcs
          resource: lifecycle-gcs
          params:
            file: lifecycle-binaries/detector-*
        - put: analyzer-gcs
          resource: lifecycle-gcs
          params:
            file: lifecycle-binaries/analyzer-*
        - put: builder-gcs
          resource: lifecycle-gcs
          params:
            file: lifecycle-binaries/builder-*
        - put: exporter-gcs
          resource: lifecycle-gcs
          params:
            file: lifecycle-binaries/exporter-*
        - put: launcher-gcs
          resource: lifecycle-gcs
          params:
            file: lifecycle-binaries/launcher-*
      - put:  lifecycle-build-version
        params:
          file: lifecycle-build-version/version

  - name: build-stack-images
    plan:
      - get: lifecycle-repo
        trigger: true
        passed: [build-lifecycle-binaries]
      - get: ci
        passed: [build-lifecycle-binaries]
      - get: lifecycle-image-version
        passed: [build-lifecycle-binaries]
        params:
          pre: alpha
      - get: lifecycle-build-version
        passed: [build-lifecycle-binaries]
      - task: build-images
        privileged: true
        file: ci/tasks/build-stack-images/task.yml
      - aggregate:
        - put: packs-base-image
          params:
            load_file: built-lifecycle-images/base.tar
            load_repository: packs/base # port needed for private repos
            load_tag: dev
            tag_file: built-lifecycle-version/version
        - put: packs-run-image
          params:
            load_file: built-lifecycle-images/run.tar
            load_repository: packs/run # port needed for private repos
            load_tag: dev
            tag_file: built-lifecycle-version/version
        - put: packs-build-image
          params:
            load_file: built-lifecycle-images/build.tar
            load_repository: packs/build # port needed for private repos
            load_tag: dev
            tag_file: built-lifecycle-version/version
        - put: packs-samples-image
          params:
            load_file: built-lifecycle-images/samples.tar
            load_repository: packs/samples # port needed for private repos
            load_tag: dev
            tag_file: built-lifecycle-version/version

  - name: pack-unit
    plan:
      - aggregate:
        - get: pack-repo
          resource: pack-repo
          trigger: true
          version: every
        - get: ci
      - task: run-unit-tests
        privileged: true
        file: ci/tasks/run-pack-unit/task.yml

  - name: acceptance
    plan:
      - aggregate:
        - get: pack-repo
          resource: pack-repo
          passed: [pack-unit]
        - get: ci
          passed: [build-stack-images]
        - get: packs-build-image
          passed: [build-stack-images]
          params: {save: true}
        - get: packs-run-image
          passed: [build-stack-images]
          params: {save: true}
        - get: packs-samples-image
          passed: [build-stack-images]
          trigger: true
          params: {save: true}
        - get: lifecycle-image-version
          passed: [build-stack-images]
        - get: lifecycle-build-version
          passed: [build-stack-images]
      - task: acceptance
        privileged: true
        file: ci/tasks/run-acceptance/task.yml
      - put: lifecycle-build-version
#        params:
#          pre: build

  - name: release-lifecycle
    plan:
      - aggregate:
        - get: ci
          passed: [acceptance]
        - get: lifecycle-image-version
          passed: [acceptance]
          params:
            pre: alpha
        - get: lifecycle-build-version
          passed: [acceptance]
          params:
            pre: build
        - get: packs-build-image
          passed: [acceptance]
          params: {save: true}
        - get: packs-run-image
          passed: [acceptance]
          params: {save: true}
        - get: packs-samples-image
          passed: [acceptance]
          params: {save: true}
      - task: release-version-create
        file: ci/tasks/release-version-create/task.yml
      - aggregate:
        - put: packs-build-image
          params:
            load: packs-build-image
            tag_file: release-lifecycle-version/version
        - put: packs-run-image
          params:
            load: packs-run-image
            tag_file: release-lifecycle-version/version
        - put: packs-samples-image
          params:
            load: packs-samples-image
            tag_file: release-lifecycle-version/version
        - put: packs-run-image
          params:
            load: packs-run-image
            tag_file: release-lifecycle-version/version
        - put: lifecycle-image-version
          params:
            pre: alpha

  - name: release-pack
    plan:
    - aggregate:
      - do:
        - get: pack-version
        - put: pack-version
          params:
            bump: patch
      - get: lifecycle-image-version
        passed: [release-lifecycle]
      - get: pack-repo
        passed: [acceptance]
      - get: ci
    - task: build-pack-cli-linux
      file: ci/tasks/build-pack-cli/task.yml
      params:
        OS_NAME: linux
    - put: pack-github-release
      params:
        name: pack-release/pack-release-path
        tag: pack-version/version
        tag_prefix: v
        commitish: pack-repo/.ref
        globs: pack-release/pack-*


    # rebuild
    # put binaries in bucket
    # put github release

