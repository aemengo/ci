jobs:
  - name: pack-unit
    plan:
      - in_parallel:
        - get: pack-repo
          resource: pack-repo
          trigger: true
          version: every
        - get: ci
          params:
            submodules: none
        - get: golang-image
          params: {save: true}
      - task: run-unit-tests
        privileged: true
        file: ci/tasks/run-pack-unit/task.yml

  - name: pack-unit-windows
    plan:
      - in_parallel:
        - get: pack-repo
          resource: pack-repo
          trigger: true
          version: every
        - get: ci
          params:
            submodules: none
      - task: unit
        file: ci/tasks/run-pack-unit-windows/task.yml
        tags: [windows]

  - name: pack-build
    plan:
    - in_parallel:
      - get: pack-repo
        version: every
        passed:
          - pack-unit
          - pack-unit-windows
        trigger: true
      - get: ci
        params:
          submodules: none
      - get: pack-version
        params:
          pre: build
      - get: golang-image
        params: {save: true}
    - in_parallel:
      - task: build-pack-cli-linux
        image: golang-image
        file: ci/tasks/build-pack-cli/task.yml
        output_mapping: {pack-release: pack-linux-release}
        params:
          GOOS: linux
      - task: build-pack-cli-darwin
        image: golang-image
        file: ci/tasks/build-pack-cli/task.yml
        output_mapping: {pack-release: pack-darwin-release}
        params:
          GOOS: darwin
      - task: build-pack-cli-windows
        image: golang-image
        file: ci/tasks/build-pack-cli/task.yml
        output_mapping: {pack-release: pack-windows-release}
        params:
          GOOS: windows
    - in_parallel:
      - put: pack-linux-binary
        params: {file: pack-linux-release/pack-*-linux}
      - put: pack-windows-binary
        params: {file: pack-windows-release/pack-*-windows}
      - put: pack-darwin-binary
        params: {file: pack-darwin-release/pack-*-darwin}
      - put: pack-version
        params:
          file: pack-version/version

  - name: acceptance-lifecycle-current
    plan:
      - in_parallel:
        # Versions
        - get: pack-version
          passed: [pack-build]
          trigger: true
        - get: lifecycle-version
          trigger: true

        # Repos
        - get: pack-repo
          passed: [pack-build]
        - get: ci
          params:
            submodules: none

        # Pack binaries
        - get: pack
          resource: pack-linux-binary
          passed: [pack-build]
        - get: pack-windows-binary
          passed: [pack-build]
        - get: pack-darwin-binary
          passed: [pack-build]

        # Lifecycle binaries
        - get: lifecycle
          resource: lifecycle-master-binary

      - task: acceptance
        privileged: true
        file: ci/tasks/run-acceptance/task.yml
        params:
          ACCEPTANCE_SUITE_CONFIG: '[{"pack": "current", "pack_create_builder": "current", "lifecycle": "current"}]'

  - name: acceptance-lifecycle-N-1
    plan:
      - in_parallel:
        # Versions
        - get: pack-version
          passed: [pack-build]
          trigger: true

        # Repos
        - get: pack-repo
          passed: [pack-build]
        - get: ci
          params:
            submodules: none

        # Pack binaries
        - get: pack
          resource: pack-linux-binary
          passed: [pack-build]
        - get: pack-windows-binary
          passed: [pack-build]
        - get: pack-darwin-binary
          passed: [pack-build]

        # Lifecycle binaries
        - get: previous-lifecycle
          resource: released-lifecycle
          params:
            globs: [lifecycle-*linux*.tgz]

      - task: acceptance
        privileged: true
        file: ci/tasks/run-acceptance/task.yml
        params:
          ACCEPTANCE_SUITE_CONFIG: '[{"pack": "current", "pack_create_builder": "current", "lifecycle": "previous"}]'

  - name: acceptance-lifecycle-current-windows
    plan:
      - in_parallel:
          # Repos
          - get: pack-repo
            passed: [pack-build]
          - get: ci
            params:
              submodules: none

          # Pack binaries
          - get: pack-windows-binary
            passed: [pack-build]

      - task: acceptance
        privileged: true
        file: ci/tasks/run-acceptance-windows/task.yml
        tags: [windows]

  - name: compatibility
    plan:
      - in_parallel:
          # Versions
          - get: pack-version
            passed: [pack-build]
            trigger: true

          # Repos
          - get: pack-repo
            passed: [pack-build]
          - get: ci
            params:
              submodules: none

          # Pack binaries
          - get: pack
            resource: pack-linux-binary
            passed: [pack-build]
          - do:
              - get: ci-image
              - get: released-pack
                params:
                  globs: [pack-*-linux.tgz]
              - task: untar
                image: ci-image
                config:
                  platform: linux
                  inputs:
                    - name: released-pack
                  outputs:
                    - name: previous-pack
                  run:
                    path: bash
                    args:
                      - "-c"
                      - "tar xvzf released-pack/pack-*-linux.tgz -C previous-pack/"
          - get: pack-windows-binary
            passed: [pack-build]
          - get: pack-darwin-binary
            passed: [pack-build]

          # Lifecycle binaries
          - get: lifecycle
            resource: lifecycle-master-binary
          - get: previous-lifecycle
            resource: released-lifecycle
            params:
              globs: [lifecycle-*linux*.tgz]

      - do:
          - task: p_current-cb_previous-lc_previous
            privileged: true
            file: ci/tasks/run-acceptance/task.yml
            params:
              ACCEPTANCE_SUITE_CONFIG: '[{"pack": "current", "pack_create_builder": "previous", "lifecycle": "previous"}]'
          - task: p_previous-cb_current-lc_previous
            privileged: true
            file: ci/tasks/run-acceptance/task.yml
            params:
              ACCEPTANCE_SUITE_CONFIG: '[{"pack": "previous", "pack_create_builder": "current", "lifecycle": "previous"}]'
          - task: p_previous-cb_current-lc_current
            privileged: true
            file: ci/tasks/run-acceptance/task.yml
            params:
              ACCEPTANCE_SUITE_CONFIG: '[{"pack": "previous", "pack_create_builder": "current", "lifecycle": "current"}]'

  - name: pack-release
    plan:
      - in_parallel:
          # Repos
          - get: ci
            params:
              submodules: none
          - get: pack-repo
            passed: [acceptance-lifecycle-current, acceptance-lifecycle-N-1]
          - get: tap

          # Binaries
          - get: pack-windows-binary
            passed: [acceptance-lifecycle-current-windows, acceptance-lifecycle-N-1, compatibility]
          - get: pack-darwin-binary
            passed: [acceptance-lifecycle-current, acceptance-lifecycle-N-1, compatibility]
          - get: pack-linux-binary
            passed: [acceptance-lifecycle-current, acceptance-lifecycle-N-1, compatibility]

          # Versions
          - get: pack-version
            passed: [acceptance-lifecycle-current, acceptance-lifecycle-N-1, compatibility]
            params:
              bump: final

      - task: prepare-release
        file: ci/tasks/prepare-pack-release/task.yml
      - put: pack-github-release
        params:
          name: release-artifacts/name
          tag: release-artifacts/tag
          commitish: release-artifacts/commit-sha
          globs: [release-artifacts/*.tgz, release-artifacts/*.zip]
      - put: pack-version
        params:
          bump: minor

  - name: update-homebrew
    plan:
    - in_parallel:
      # Repos
      - get: ci
        params:
          submodules: none
      - get: tap

      # Github Releases
      - get: released-pack
        trigger: true
        params:
          globs: [pack-*-macos.tgz]

    - task: update-homebrew
      file: ci/tasks/update-pack-brew-formula/task.yml
      params:
        GITHUB_EMAIL: ((buildpack-robot-github-email))
    - put: tap
      params:
        repository: updated-tap